apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven'

project.group = "com.rever"

version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


dependencies {
    compile gradleApi()
    compile localGroovy()
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file://${projectDir}/repo")
        }
    }
}

//
//
//import groovy.transform.ToString
//import org.gradle.api.internal.ConventionTask
//import org.gradle.api.internal.project.IsolatedAntBuilder
//import org.gradle.api.internal.project.ProjectInternal
//
//class MyBatisGeneratorPlugin  implements Plugin<ProjectInternal> {
//    @Override
//    void apply(ProjectInternal project) {
//        project.logger.info "Configuring MyBatis Generator for project: $project.name"
//        MyBatisGeneratorTask task = project.tasks.create("mbGenerator", MyBatisGeneratorTask);
//        project.configurations.create('mbg').with {
//            description = 'The cargo libraries to be used for this project.'
//        }
//        project.extensions.create("mbg", MbgExtension)
//
//        task.conventionMapping.with {
//            myBatisGeneratorClasspath = {
//                def config = project.configurations['mbg']
//                if (config.dependencies.empty) {
//                    project.dependencies {
//                        mbg('org.mybatis.generator:mybatis-generator-core:1.3.2')
//                    }
//                }
//                config
//            }
//            overwrite = {project.mbg.overwrite}
//            configFile = {project.mbg.configFile}
//            verbose = {project.mbg.verbose}
//            targetDir = {project.mbg.targetDir}
//        }
//
//    }
//}
//
//@ToString(includeNames = true)
//class MbgExtension {
//    def overwrite = true
//    def configFile = "generatorConfig.xml"
//    def verbose = false
//    def targetDir  = "."
//}
//
//class MyBatisGeneratorTask extends ConventionTask {
//    def overwrite
//    def configFile
//    def verbose
//    def targetDir
//    FileCollection myBatisGeneratorClasspath
//
//    @TaskAction
//    void executeCargoAction() {
//        services.get(IsolatedAntBuilder).withClasspath(getMyBatisGeneratorClasspath()).execute {
//            ant.taskdef(name: 'mbgenerator', classname: 'org.mybatis.generator.ant.GeneratorAntTask')
//
//            ant.properties['generated.source.dir'] = getTargetDir()
//            ant.mbgenerator(overwrite: getOverwrite(), configfile: getConfigFile(), verbose: getVerbose()){
////                propertyset(propertyref("generated.source.dir"))
//            }
//        }
//    }
//}
//
//apply plugin: MyBatisGeneratorPlugin